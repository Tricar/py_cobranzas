package Model;
// Generated 21/04/2016 10:03:10 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Color generated by hbm2java
 */
@Entity
@Table(name = "Tipodocument", schema = "dbo", catalog = "cobranzas"
)
public class Tipodocument implements java.io.Serializable {

    private Integer idtipodocument;
    private String descripcion;
    private String codigocontable;
    private Set operacions = new HashSet(0);

    public Tipodocument() {
    }

    public Tipodocument(Integer idtipodocument) {
        this.idtipodocument = idtipodocument;
    }

    public Tipodocument(Integer idtipodocument, String descripcion, String codigocontable, Set operacions) {
        this.idtipodocument = idtipodocument;
        this.descripcion = descripcion;
        this.codigocontable = codigocontable;
        this.operacions = operacions;
    }

    @Id

    @Column(name = "idtipodocument", unique = true, nullable = false)
    public Integer getIdtipodocument() {
        return this.idtipodocument;
    }

    public void setIdtipodocument(Integer idtipodocument) {
        this.idtipodocument = idtipodocument;
    }

    @Column(name = "descripcion", nullable = false, length = 50)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "codigocontable", nullable = false, length = 50)
    public String getCodigocontable() {
        return this.codigocontable;
    }

    public void setCodigocontable(String codigocontable) {
        this.descripcion = codigocontable;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "Tipodocument")
    public Set getOperacions() {
        return this.operacions;
    }

    public void setOperacions(Set operacions) {
        this.operacions = operacions;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idtipodocument != null)
                ? idtipodocument.equals(((Tipodocument) other).idtipodocument)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idtipodocument != null)
                ? (getClass().hashCode() + idtipodocument.hashCode())
                : super.hashCode();
    }

}
