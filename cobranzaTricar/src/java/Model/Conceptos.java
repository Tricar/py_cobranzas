package Model;
// Generated 21/04/2016 10:03:10 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Conceptos generated by master
 */
@Entity
@Table(name = "conceptos", schema = "dbo", catalog = "cobranzas"
)
public class Conceptos implements java.io.Serializable {

    private Integer idconceptos;
    private Credito credito;
    private Anexo anexo;
    private String tipo;
    private BigDecimal montopago;
    private BigDecimal total;    
    private Date fecreg;      
    private Boolean cobrado;
    private Set pagoses = new HashSet(0);

    public Conceptos() {
    }

    public Conceptos(Integer idconceptos) {
        this.idconceptos = idconceptos;
    }

    public Conceptos(Integer idconceptos, Credito credito, Anexo anexo, String tipo, BigDecimal montopago, BigDecimal total, Date fecreg, Boolean cobrado, Set pagoses) {
        this.idconceptos = idconceptos;
        this.credito = credito;
        this.anexo = anexo;
        this.tipo = tipo;
        this.montopago = montopago;
        this.total = total;
        this.fecreg = fecreg;        
        this.cobrado = cobrado;
        this.pagoses = pagoses;
    }

    @Id

    @Column(name = "idconceptos", unique = true, nullable = false)
    public Integer getIdconceptos() {
        return this.idconceptos;
    }

    public void setIdconceptos(Integer idconceptos) {
        this.idconceptos = idconceptos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idventa")
    public Credito getCredito() {
        return this.credito;
    }

    public void setCredito(Credito credito) {
        this.credito = credito;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idanexo")
    public Anexo getAnexo() {
        return this.anexo;
    }

    public void setAnexo(Anexo anexo) {
        this.anexo = anexo;
    }
    
    @Column(name = "tipo", length = 2)
    public String getTipo() {
        return this.tipo;
    }    

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    @Column(name = "montopago", precision = 17)
    public BigDecimal getMontopago() {
        return this.montopago;
    }

    public void setMontopago(BigDecimal montopago) {
        this.montopago = montopago;
    }
     
    @Column(name = "total", precision = 17)
    public BigDecimal getTotal() {
        return this.total;
    }

    public void setTotal(BigDecimal total) {
        this.total = total;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecreg", length = 23)
    public Date getFecreg() {
        return this.fecreg;
    }

    public void setFecreg(Date fecreg) {
        this.fecreg = fecreg;
    }

    @Column(name = "cobrado")
    public Boolean getCobrado() {
        return this.cobrado;
    }

    public void setCobrado(Boolean cobrado) {
        this.cobrado = cobrado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "conceptos")
    public Set getPagoses() {
        return this.pagoses;
    }

    public void setPagoses(Set pagoses) {
        this.pagoses = pagoses;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idconceptos != null)
                ? idconceptos.equals(((Conceptos) other).idconceptos)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idconceptos != null)
                ? (getClass().hashCode() + idconceptos.hashCode())
                : super.hashCode();
    }

}
