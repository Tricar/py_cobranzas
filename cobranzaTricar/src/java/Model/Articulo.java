package Model;
// Generated 21/04/2016 10:03:10 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Color generated by hbm2java
 */
@Entity
@Table(name = "articulo", schema = "dbo", catalog = "cobranzas"
)
public class Articulo implements java.io.Serializable {

    private Integer idarticulo;
    private Tipoarticulo tipoarticulo;
    private Color color;
    private Modelo modelo;
    private Integer consecutivo;
    private String codigo;
    private String descripcion;
    private BigDecimal precioventa;
    private BigDecimal preciocompra;
    private BigDecimal costopromedio;
    private String unidadmedida;
    private Integer cantidad;
    private Date created;
    private Set ventadetalles = new HashSet(0);

    public Articulo() {
    }

    public Articulo(Integer idarticulo) {
        this.idarticulo = idarticulo;
    }

    public Articulo(Integer idarticulo, Tipoarticulo tipoarticulo, Color color, Modelo modelo, String codigo, Integer consecutivo, String descripcion, BigDecimal precioventa, BigDecimal preciocompra, BigDecimal costopromedio, String unidadmedida, Integer cantidad, Date created, Set ventadetalles) {
        this.idarticulo = idarticulo;
        this.tipoarticulo = tipoarticulo;
        this.color = color;
        this.modelo = modelo;
        this.consecutivo = consecutivo;
        this.codigo = codigo;
        this.descripcion = descripcion;
        this.preciocompra = preciocompra;
        this.precioventa = precioventa;
        this.costopromedio = costopromedio;
        this.unidadmedida = unidadmedida;
        this.cantidad = cantidad;
        this.created = created;
        this.ventadetalles = ventadetalles;
    }

    @Id

    @Column(name = "idarticulo", unique = true, nullable = false)
    public Integer getIdarticulo() {
        return this.idarticulo;
    }

    public void setIdarticulo(Integer idarticulo) {
        this.idarticulo = idarticulo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idcolor", nullable = false)
    public Color getColor() {
        return this.color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idmodelo", nullable = false)
    public Modelo getModelo() {
        return this.modelo;
    }

    public void setModelo(Modelo modelo) {
        this.modelo = modelo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idtipoarticulo", nullable = false)
    public Tipoarticulo getTipoarticulo() {
        return this.tipoarticulo;
    }

    public void setTipoarticulo(Tipoarticulo tipoarticulo) {
        this.tipoarticulo = tipoarticulo;
    }

    @Column(name = "consecutivo")
    public Integer getConsecutivo() {
        return this.consecutivo;
    }

    public void setConsecutivo(Integer consecutivo) {
        this.consecutivo = consecutivo;
    }

    @Column(name = "codigo", nullable = false, length = 10)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "descripcion", nullable = false, length = 100)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "precioventa", nullable = false, precision = 18)
    public BigDecimal getPrecioventa() {
        return this.precioventa;
    }

    public void setPrecioventa(BigDecimal precioventa) {
        this.precioventa = precioventa;
    }

    @Column(name = "preciocompra", nullable = false, precision = 18)
    public BigDecimal getPreciocompra() {
        return this.preciocompra;
    }

    public void setPreciocompra(BigDecimal preciocompra) {
        this.preciocompra = preciocompra;
    }

    @Column(name = "costopromedio", nullable = false, precision = 18)
    public BigDecimal getCostopromedio() {
        return this.costopromedio;
    }

    public void setCostopromedio(BigDecimal costopromedio) {
        this.costopromedio = costopromedio;
    }

    @Column(name = "unidadmedida", nullable = false, length = 50)
    public String getUnidadmedida() {
        return this.unidadmedida;
    }

    public void setUnidadmedida(String unidadmedida) {
        this.unidadmedida = unidadmedida;
    }

    @Column(name = "cantidad")
    public Integer getCantidad() {
        return this.cantidad;
    }

    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 23)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "Articulo")
    public Set getVentadetalles() {
        return this.ventadetalles;
    }

    public void setVentadetalles(Set ventadetalles) {
        this.ventadetalles = ventadetalles;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idarticulo != null)
                ? idarticulo.equals(((Articulo) other).idarticulo)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idarticulo != null)
                ? (getClass().hashCode() + idarticulo.hashCode())
                : super.hashCode();
    }

}
