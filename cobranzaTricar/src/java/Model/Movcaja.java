package Model;
// Generated 21/04/2016 10:03:10 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pagos generated by hbm2java
 */
@Entity
@Table(name = "movcaja", schema = "dbo", catalog = "cobranzas"
)
public class Movcaja implements java.io.Serializable {

    private Integer idmovcaja;    
    private BigDecimal monto;
    private String tipomov;
    private Caja caja; 
    private Date fechamov;
    private Letras origen;
    private Conceptos concepto;

    public Movcaja() {
    }

    public Movcaja(Integer idmovcaja) {
        this.idmovcaja = idmovcaja;
    }

    public Movcaja(Integer idmovcaja, BigDecimal total, String tipomov, Caja caja, Letras origen, Conceptos concepto) {
        this.idmovcaja = idmovcaja;        
        this.monto = total;
        this.tipomov = tipomov;
        this.caja = caja;                
        this.origen = origen;
        this.concepto = concepto;
    }

    @Id

    @Column(name = "idmovcaja", unique = true, nullable = false)
    public Integer getIdmovcaja() {
        return this.idmovcaja;
    }

    public void setIdmovcaja(Integer idmovcaja) {
        this.idmovcaja = idmovcaja;
    }
    
    @Column(name = "total", nullable = false, precision = 17)
    public BigDecimal getMonto() {
        return this.monto;
    }

    public void setMonto(BigDecimal monto) {
        this.monto = monto;
    }
    
    @Column(name = "tipomov", length = 2)
    public String getTipomov() {
        return this.tipomov;
    }

    public void setTipomov(String tipomov) {
        this.tipomov = tipomov;
    }  
           
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idcaja", nullable = false)
    public Caja getCaja() {
        return this.caja;
    }

    public void setCaja(Caja caja) {
        this.caja = caja;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fechamov", nullable = false, length = 23)
    public Date getFechamov() {
        return this.fechamov;
    }

    public void setFechamov(Date fechamov) {
        this.fechamov = fechamov;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "origen", nullable = false)
    public Letras getOrigen() {
        return this.origen;
    }

    public void setOrigen(Letras origen) {
        this.origen = origen;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "anticipo", nullable = false)
    public Conceptos getConcepto() {
        return this.concepto;
    }

    public void setConcepto(Conceptos concepto) {
        this.concepto = concepto;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idmovcaja != null)
                ? idmovcaja.equals(((Movcaja) other).idmovcaja)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idmovcaja != null)
                ? (getClass().hashCode() + idmovcaja.hashCode())
                : super.hashCode();
    }

}

