package Model;
// Generated Feb 22, 2017 8:23:40 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Vehiculo generated by hbm2java
 */
@Entity
@Table(name = "vehiculon",
        schema = "dbo",
        catalog = "cobranzas"
)
public class Vehiculon implements java.io.Serializable {

    private Integer idvehiculon;
    private Color color;
    private Modelo modelo;
    private Character marca;
    private String chasis;
    private String motor;
    private int anofab;
    private Date created;
    private Character estado;
    private Set talleres = new HashSet(0);

    public Vehiculon() {
    }

    public Vehiculon(Integer idvehiculon) {
        this.idvehiculon = idvehiculon;
    }

    public Vehiculon(Integer idvehiculon, Color color, Modelo modelo, Character marca, String chasis, int anofab, Date created, String motor, Character estado, Set talleres) {
        this.idvehiculon = idvehiculon;
        this.color = color;
        this.modelo = modelo;
        this.marca = marca;
        this.chasis = chasis;
        this.anofab = anofab;
        this.created = created;
        this.motor = motor;
        this.estado = estado;
        this.talleres = talleres;
    }

    @Id
    @Column(name = "idvehiculon", unique = true, nullable = false)
    public Integer getIdvehiculon() {
        return this.idvehiculon;
    }

    public void setIdvehiculon(Integer idvehiculon) {
        this.idvehiculon = idvehiculon;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idcolor", nullable = false)
    public Color getColor() {
        return this.color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idmodelo", nullable = false)
    public Modelo getModelo() {
        return this.modelo;
    }

    public void setModelo(Modelo modelo) {
        this.modelo = modelo;
    }

    @Column(name = "marca", length = 1)
    public Character getMarca() {
        return this.marca;
    }

    public void setMarca(Character marca) {
        this.marca = marca;
    }

    @Column(name = "chasis", nullable = false, length = 20)
    public String getChasis() {
        return this.chasis;
    }

    public void setChasis(String chasis) {
        this.chasis = chasis;
    }

    @Column(name = "anofab", nullable = false)
    public int getAnofab() {
        return this.anofab;
    }

    public void setAnofab(int anofab) {
        this.anofab = anofab;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", length = 23)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Column(name = "motor", length = 20)
    public String getMotor() {
        return this.motor;
    }

    public void setMotor(String motor) {
        this.motor = motor;
    }

    @Column(name = "estado", length = 1)
    public Character getEstado() {
        return this.estado;
    }

    public void setEstado(Character estado) {
        this.estado = estado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "vehiculon")
    public Set getTalleres() {
        return this.talleres;
    }

    public void setTalleres(Set talleres) {
        this.talleres = talleres;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idvehiculon != null)
                ? idvehiculon.equals(((Vehiculon) other).idvehiculon)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idvehiculon != null)
                ? (getClass().hashCode() + idvehiculon.hashCode())
                : super.hashCode();
    }

}
