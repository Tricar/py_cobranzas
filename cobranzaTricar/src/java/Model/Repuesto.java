package Model;
// Generated 21/04/2016 10:03:10 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Color generated by hbm2java
 */
@Entity
@Table(name = "repuesto", schema = "dbo", catalog = "cobranzas"
)
public class Repuesto implements java.io.Serializable {

    private Integer idrepuesto;
    private String codigo;
    private String descripcion;
    private BigDecimal precioventa;
    private BigDecimal preciocompra;
    private BigDecimal costopromedio;
    private String unidadmedida;
    private Integer cantidad;
    private Date created;
    private Date updated;
    private Set detalleventas = new HashSet(0);

    public Repuesto() {
    }

    public Repuesto(Integer idrepuesto) {
        this.idrepuesto = idrepuesto;
    }

    public Repuesto(Integer idrepuesto, String codigo, String descripcion, BigDecimal precioventa, BigDecimal preciocompra, BigDecimal costopromedio, String unidadmedida, Integer cantidad, Date created, Date updated, Set detalleventas) {
        this.idrepuesto = idrepuesto;
        this.codigo = codigo;
        this.descripcion = descripcion;
        this.preciocompra = preciocompra;
        this.precioventa = precioventa;
        this.costopromedio = costopromedio;
        this.unidadmedida = unidadmedida;
        this.cantidad = cantidad;
        this.created = created;
        this.updated = updated;
        this.detalleventas = detalleventas;
    }

    @Id

    @Column(name = "idrepuesto", unique = true, nullable = false)
    public Integer getIdrepuesto() {
        return this.idrepuesto;
    }

    public void setIdrepuesto(Integer idrepuesto) {
        this.idrepuesto = idrepuesto;
    }

    @Column(name = "codigo", nullable = false, length = 10)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "descripcion", nullable = false, length = 100)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "precioventa", nullable = false, precision = 18)
    public BigDecimal getPrecioventa() {
        return this.precioventa;
    }

    public void setPrecioventa(BigDecimal precioventa) {
        this.precioventa = precioventa;
    }

    @Column(name = "preciocompra", nullable = false, precision = 18)
    public BigDecimal getPreciocompra() {
        return this.preciocompra;
    }

    public void setPreciocompra(BigDecimal preciocompra) {
        this.preciocompra = preciocompra;
    }

    @Column(name = "costopromedio", nullable = false, precision = 18)
    public BigDecimal getCostopromedio() {
        return this.costopromedio;
    }

    public void setCostopromedio(BigDecimal costopromedio) {
        this.costopromedio = costopromedio;
    }

    @Column(name = "unidadmedida", nullable = false, length = 50)
    public String getUnidadmedida() {
        return this.unidadmedida;
    }

    public void setUnidadmedida(String unidadmedida) {
        this.unidadmedida = unidadmedida;
    }
    
    @Column(name = "cantidad")
    public Integer getCantidad() {
        return this.cantidad;
    }

    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 23)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated", nullable = false, length = 23)
    public Date getUpdated() {
        return this.updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "Repuesto")
    public Set getDetalleventas() {
        return this.detalleventas;
    }

    public void setDetalleventas(Set detalleventas) {
        this.detalleventas = detalleventas;
    }

    @Override
    public boolean equals(Object other) {
        return (other != null && getClass() == other.getClass() && idrepuesto != null)
                ? idrepuesto.equals(((Repuesto) other).idrepuesto)
                : (other == this);
    }

    @Override
    public int hashCode() {
        return (idrepuesto != null)
                ? (getClass().hashCode() + idrepuesto.hashCode())
                : super.hashCode();
    }

}
